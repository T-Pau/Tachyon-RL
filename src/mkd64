#!/usr/bin/env perl

#  mkd64 -- create D64 image
#  Copyright (C) 2020 Dieter Baron
#
#  This file is part of Tachyon RL, a backup program for your RAMLink.
#  The authors can be contacted at <tachyon-rl@tpau.group>.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. The names of the authors may not be used to endorse or promote
#     products derived from this software without specific prior
#     written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS
#  OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
#  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY
#  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
#  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
#  IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
#  IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

use strict;

main();

sub main {
    if (scalar(@ARGV) != 3) {
        usage();
        exit(1);
    }

    my ($image, $name, $listfile) = @ARGV;

    unless (process($image, $name, $listfile)) {
        unlink($image);
        exit(1);
    }

    exit(0);
}

sub process {
    my ($image, $name, $listfile) = @_;

    my $type = "\L$image";
    $type =~ s/.*\.//;

    my $fh;

    unless (open($fh, '<', $listfile)) {
        error("can't open list file '$listfile': $!");
        return undef;
    }

    unless (checked_system('c1541', '-silent', '-format', $name, $type, $image)) {
        return undef;
    }

    while (my $line = <$fh>) {
        chomp $line;
        my ($name, $file);

        if ($line =~ m/(.*)\t(.*)/) {
            ($file, $name) = ($1, $2);
        }
        else {
            $file = $line;
            $name = $file;
            $name =~ s/\.prg$//;
        }

        unless (checked_system('c1541', $image, '-silent', '-write', $file, $name)) {
            return undef;
        }
    }

    return 1;
}

sub usage {
    print STDERR "usage: $0 file.d64 'name,id' list-file\n";
}

sub error {
    my ($message) = @_;

    print STDERR "$0: $message\n";
}

sub warning {
    my ($message) = @_;

    print STDERR "$0: warning: $message\n";
}

sub checked_system {
    unless (system(@_) == 0) {
        error("can't execute '$_[0]': $?");
        return undef;
    }
    return 1;
}
